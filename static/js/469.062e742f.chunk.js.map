{"version":3,"file":"static/js/469.062e742f.chunk.js","mappings":"8MACA,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAiG,8BCDpFA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAErBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOC,KAAjB,EAEpBC,EAAoB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,KAAnB,E,kBCCzBC,EAAgB,WAC3B,IAAMP,GAAWQ,EAAAA,EAAAA,IAAYH,GACvBI,GAAWC,EAAAA,EAAAA,MAgBjB,OACE,kBAAMC,UAAWC,EAAUC,SAhBR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKd,MAC1BgB,EAASJ,EAAKG,SAASC,OAAOhB,MACnBJ,EAASqB,MACxB,SAAAC,GAAO,OAAIA,EAAQJ,KAAKK,gBAAkBL,EAAKK,aAAxC,IAGPC,MAAM,8BAGRf,GAASgB,EAAAA,EAAAA,IAAW,CAAEP,KAAAA,EAAME,OAAAA,KAC5BJ,EAAKU,QACN,EAEC,WACE,kBACER,KAAK,OACLS,YAAY,aACZhB,UAAWC,EACXgB,UAAQ,KAEV,kBACEV,KAAK,SACLS,YAAY,eACZhB,UAAWC,EACXgB,UAAQ,KAEV,mBAAQC,KAAK,SAASlB,UAAWC,EAAjC,2BAKL,ECzCD,EAA0B,yBAA1B,EAA0D,sBAA1D,EAAyF,wBCG5EkB,EAAU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIb,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC5BX,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAyBM,KACzB,cAAGP,UAAWC,EAAd,SAAyBQ,KACzB,mBAAQS,KAAK,SAASlB,UAAWC,EAAYoB,QAL5B,kBAAMvB,GAASwB,EAAAA,EAAAA,IAAcF,GAA7B,EAKjB,sBAKL,ECfD,EAAuB,2BCIVG,EAAe,WAC1B,IAAMlC,GAAWQ,EAAAA,EAAAA,IAAYH,GACvBF,GAASK,EAAAA,EAAAA,IAAYN,GAMrBiC,EAJGnC,EAASG,QAAO,SAAAmB,GAAO,OAC5BA,EAAQJ,KAAKK,cAAca,SAASjC,EAAOoB,cADf,IAKhC,OACE,eAAIZ,UAAWC,EAAf,SACGuB,EAAiBE,KAAI,gBAAGN,EAAH,EAAGA,GAAIb,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACpB,yBACE,SAACU,EAAD,CAASC,GAAIA,EAAIb,KAAMA,EAAME,OAAQA,KAD9BW,EADW,KAO3B,E,2BCrBYO,EAAaC,EAAAA,EAAAA,IAAH,6FAMVC,EAAcD,EAAAA,EAAAA,GAAH,gECJXE,EAAS,WACpB,IAAMhC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC4B,EAAD,WACE,mBAAOI,QAAQ,SAAf,WACE,SAACF,EAAD,qCACA,kBACEX,KAAK,OACLX,KAAK,SACLa,GAAG,SACHJ,YAAY,aACZgB,SAAU,SAAAC,GAAK,OAAInC,GAASoC,EAAAA,EAAAA,GAAUD,EAAME,OAAO1C,OAApC,QAKxB,E,SCZc,SAAS2C,IACtB,IAAMtC,GAAWC,EAAAA,EAAAA,MACXsC,GAAYxC,EAAAA,EAAAA,IAAYV,GAI9B,OAHAmD,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAEF,iCACE,8CAEA,SAACF,EAAD,KACA,SAACkC,EAAD,KACA,yBAAMO,GAAa,2BACnB,SAACd,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-1-phonebook/./src/components/ContactEditor/ContactEditor.module.css?ead8","redux/contacts/selectors.js","components/ContactEditor/ContactEditor.jsx","webpack://goit-react-hw-08-1-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-1-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\"};","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactEditor.module.css';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactEditor = () => {\n  const contacts = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const isExsist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExsist) {\n      alert('Contact already is exsist');\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        name=\"name\"\n        placeholder=\"Enter name\"\n        className={css.input}\n        required\n      />\n      <input\n        name=\"number\"\n        placeholder=\"Enter number\"\n        className={css.input}\n        required\n      />\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contact_wrapper__K-zLN\",\"text\":\"Contact_text__Wq-3f\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './Contact.module.css';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>{name}</p>\n      <p className={css.text}>{number}</p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectAllContacts, selectFilter } from 'redux/contacts/selectors';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  const handleFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const filteredContacts = handleFilteredContacts();\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Contact id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterCont = styled.div`\n  text-align: start;\n  margin-right: 20px;\n  margin-bottom: 40px;\n`;\n\nexport const FilterTitle = styled.h3`\n  font-weight: 600;\n  color: #65647c;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\nimport { FilterCont, FilterTitle } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FilterCont>\n      <label htmlFor=\"filter\">\n        <FilterTitle>Find contacts by name</FilterTitle>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          placeholder=\"Enter name\"\n          onChange={event => dispatch(addFilter(event.target.value))}\n        />\n      </label>\n    </FilterCont>\n  );\n};\n","import { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <title>Your Contacts</title>\n\n      <ContactEditor />\n      <Filter />\n      <div>{isLoading && 'Request in progres...'}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","value","selectAllContacts","items","ContactEditor","useSelector","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","name","elements","number","find","contact","toLowerCase","alert","addContact","reset","placeholder","required","type","Contact","id","onClick","deleteContact","ContactsList","filteredContacts","includes","map","FilterCont","styled","FilterTitle","Filter","htmlFor","onChange","event","addFilter","target","Contacts","isLoading","useEffect","fetchContacts"],"sourceRoot":""}